% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_imagesQC.R
\name{spatialImages}
\alias{spatialImages}
\title{Create an image per array, containing one to four spatial images}
\usage{
spatialImages(
  Data,
  Data.pset = NULL,
  Resid = TRUE,
  ResSign = TRUE,
  Raw = TRUE,
  Weight = TRUE,
  WIDTH = 1000,
  HEIGHT = 1414,
  POINTSIZE = 24
)
}
\arguments{
\item{Data}{(Status: required) The raw data object (datatype: AffyBatch or ExpressionSet)}

\item{Data.pset}{(Status: optional, Default:NULL) An object obtained by
calling fitPLM (affyPLM), used for each but the raw plot. When not provided,
it is computed within the function.(datatype: PLMset)}

\item{Resid}{(Status: optional, Default:TRUE) Should a residual plot be made? (datatype: logical)}

\item{ResSign}{(Status: optional, Default:TRUE) Should a residual sign plot be made? (datatype: logical)}

\item{Raw}{(Status: optional, Default:TRUE) Should a raw plot be made? (datatype: logical)}

\item{Weight}{(Status: optional, Default:TRUE) Should a weight plot be made? (datatype: logical)}

\item{WIDTH}{(Status: optional, Default:1000) png image width (datatype: number)}

\item{HEIGHT}{(Status: optional, Default:1414) png image height (datatype: number)}

\item{POINTSIZE}{(Status: optional, Default:24) png image point size (datatype: number)}
}
\value{
Images containing each of the requested plots, one file per array.
Naming is ‘virtual_image’ followed by the (sample)name of the array.
}
\description{
This function (from functions_imagesQC.R) creates an image per array,
containing one to four spatial images. For any but the raw images,
an object obtained by calling fitPLM (affyPLM Bioconductor package)
is used. If this object is not provided, it will be computed internally
within this function.
}
\examples{
# There are two default calls by the script:
# 1/ Compute only the images showing the residuals of the PLM (if spatialImage parameter is TRUE):
# spatialImages(rawData, Data.pset=rawData.pset, Resid=TRUE, ResSign=FALSE, Raw=FALSE, Weight=FALSE)
# 2/ Compute the four images for all arrays (if PLMimage parameter is TRUE):
# spatialImages(rawData, Data.pset=rawData.pset)
# where rawData.pset has been constructed by calling:
# rawData.pset <- fitPLM(rawData)
}
