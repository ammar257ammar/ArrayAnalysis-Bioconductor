% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_imagesQC.R
\name{samplePrepPlot}
\alias{samplePrepPlot}
\title{Create an image of sample preparation controls}
\usage{
samplePrepPlot(
  Data,
  sprep = NULL,
  lys = NULL,
  plotColors = NULL,
  WIDTH = 1000,
  HEIGHT = 1414,
  POINTSIZE = 24,
  MAXARRAY = 41
)
}
\arguments{
\item{Data}{(Status: required) The raw data object (datatype: AffyBatch)}

\item{sprep}{(Status: optional, Default:NULL) A matrix of 3’probe
intensities for dap, thr, lys, and phe, taken from an object
of class YAQCStats (yaqc function, yaqcaffy). When not provided,
it is computed within the function. (datatype: matrix)}

\item{lys}{(Status: optional, Default:NULL) Matrix of A, M, P calls
for the 3’ probeset of Lys on each array, based on results from
the detection.p.val function (simpleaffy) . When not provided,
it is computed within the function. (datatype: matrix)}

\item{plotColors}{(Status: required, Default:NULL) Vector of colors assigned to each array. (datatype: character)}

\item{WIDTH}{(Status: optional, Default:1000) png image width (datatype: number)}

\item{HEIGHT}{(Status: optional, Default:1414) png image height (datatype: number)}

\item{POINTSIZE}{(Status: optional, Default:24) png image point size (datatype: number)}

\item{MAXARRAY}{(Status: optional, Default:41) threshold to adapt the image to the number of arrays (datatype: number)}
}
\value{
A PNG image of sample preparation controls, called "RawDataSamplePrepControl"
}
\description{
This function (from functions_imagesQC.R) creates an image of
sample preparation controls based on the yaqc
(yaqcaffy Bioconductor package) function, which generally only
work for chiptypes with perfect match and mismatch probes, but
even not for all of those. As such, when these statistics are
not provided as parameters, trys are used in this function to
compute them internally. Values for which the try fails are not
computed, but the script will continue after giving a warning.
}
\examples{
# samplePrepPlot(rawData,sprep,lys,plotColors)
}
