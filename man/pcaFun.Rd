% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_imagesQC.R
\name{pcaFun}
\alias{pcaFun}
\title{Create a Principal Component Analysis (PCA) plot}
\usage{
pcaFun(
  Data,
  experimentFactor = NULL,
  normMeth = "",
  scaled_pca = TRUE,
  plotColors = NULL,
  legendColors = NULL,
  plotSymbols = NULL,
  legendSymbols = NULL,
  namesInPlot = FALSE,
  WIDTH = 1000,
  HEIGHT = 1414,
  POINTSIZE = 24
)
}
\arguments{
\item{Data}{(Status: required) The raw data object (datatype: AffyBatch)}

\item{experimentFactor}{(Status: required, Default:NULL) The factor of groups. (datatype: factor)}

\item{normMeth}{(Status: required when Data is a normalized data object, Default:"")
String indicating the normalization method used (see
\link[ArrayAnalysis]{normalizeData} function for more information on the possible values). (datatype: character)}

\item{scaled_pca}{(Status: optional, Default:TRUE) Should each probeset’s
expression be scaled to unit variance before proceeding? Note that
the expression is centred on zero in any case. (datatype: logical)}

\item{plotColors}{(Status: required, Default:NULL) Vector of colors assigned to each array. (datatype: character)}

\item{legendColors}{(Status: required, Default:NULL) Vector of colors assigned to each experimental group. (datatype: character)}

\item{plotSymbols}{(Status: required, Default:NULL) symbol assigned to each array. (datatype: number)}

\item{legendSymbols}{(Status: required, Default:NULL) symbol assigned to each experimental group. (datatype: number)}

\item{namesInPlot}{(Status: optional, Default:FALSE) Should the array (sample)names
be put within the plot, or in the legend? (datatype: logical)}

\item{WIDTH}{(Status: optional, Default:1000) png image width (datatype: number)}

\item{HEIGHT}{(Status: optional, Default:1414) png image height (datatype: number)}

\item{POINTSIZE}{(Status: optional, Default:24) png image point size (datatype: number)}
}
\value{
A PNG image with PCA plot of the arrays. Naming is either ‘Raw’ or
the normalization method, followed by "DataPCAanalysis"
}
\description{
This function (from functions_imagesQC.R) creates a Principal Component
Analysis (PCA) plot of the arrays in the raw or normalized dataset
(depending on the object passed). When the dataset consists of less
than three arrays, no PCA plot is generated and a warning is given.
Before computing the PCA each probeset’s expression values are centred
on zero. If scaled_pca is TRUE, they will also be rescaled to unit variance.
When the maximum length of an array (sample)name is ten characters,
and there are no more than 16 samples, the array (sample)names are
put within the plot, otherwise they are put in the legend.
Since computing a PCA (using the prcomp function) can be memory intensive,
a try is used. Furthermore, in cases where scaling is not possible due
to loss of any variation, a second attempt is done using no scaling
(when scaled_pca had been set to TRUE), and a warning is given.
When no PCA can be computed the image is not created, and a warning is given.
}
\examples{
# By default, before the normalization the script will call:
# pcaFun(Data=rawData, experimentFactor=experimentFactor,
# plotColors=plotColors, legendColors=legendColors,
# namesInPlot=((max(nchar(sampleNames(rawData)))<=10)&&
#  (length(sampleNames(rawData))<=16))
# and after normalization:
# pcaFun(Data=normData, experimentFactor=experimentFactor,
# normMeth=normMeth, plotColors=plotColors,
# legendColors=legendColors,
# namesInPlot=((max(nchar(sampleNames(rawData)))<=10)&&
#  (length(sampleNames(rawData))<=16))
}
